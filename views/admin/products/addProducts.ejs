<!-- Breadcrumb navigation -->
<nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/admin">Home</a></li>
        <li class="breadcrumb-item"><a href="/admin/product">Products</a></li>
        <li class="breadcrumb-item active" aria-current="page">Add Products</li>
    </ol>
</nav>

<!-- Main content section -->
<section class="content-main">
    <form id="addProductForm" action="/admin/add-product" method="post" enctype="multipart/form-data">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Add New Product</h2>
                </div>
            </div>
            <div class="col-lg-9">
                <div class="card mb-4">
                    <div class="card-body">
                        <!-- Product title input -->
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product title</label>
                            <input type="text" placeholder="Type here" name="productName" class="form-control" id="product_name" required>
                            <div class="invalid-feedback">Product title is required.</div>
                        </div>

                        <!-- Category selection -->
                        <div class="mb-4">
                            <label class="form-label">Category</label>
                            <select class="form-select" name="categoryName" required>
                                <% categories.forEach(category => { %>
                                    <option value="<%- category._id %>"><%- category.name %></option>
                                <% }) %>
                            </select>
                        </div>

                        <!-- Stock and price inputs -->
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Add Stock</label>
                                    <input placeholder="$" name="productStock" type="number" class="form-control" min="0" required>
                                    <div class="invalid-feedback">Stock cannot be negative.</div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Price</label>
                                    <input placeholder="$" type="number" class="form-control" name="price" min="0" required>
                                    <div class="invalid-feedback">Price cannot be negative.</div>
                                </div>
                            </div>
                        </div>

                        <!-- Product description -->
                        <div class="mb-4">
                            <label class="form-label">Product description</label>
                            <textarea placeholder="Type here" class="form-control" name="productDespt" rows="4" required></textarea>
                            <div class="invalid-feedback">Product description is required.</div>
                        </div>

                        <!-- Primary image upload with cropping -->
                        <div class="col-lg-12">
                            <div class="card mb-4">
                                <div class="card-header">
                                    <h4>Select Primary Image</h4>
                                </div>
                                <div class="card-body">
                                    <div class="input-upload text-start">
                                        <label for="image1" class="form-label">
                                            <img id="preview1" src="../assets/imgs/theme/upload.svg" alt="" width="150px">
                                        </label>
                                        <input type="file" class="form-control" id="image1" style="display: none;" name="primaryImage" required>
                                        <button type="button" class="btn btn-md rounded font-sm" onclick="document.getElementById('image1').click();">Upload Image</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Secondary images upload -->
                        <div class="col-lg-12">
                            <div class="card mb-4">
                                <div class="card-header">
                                    <h4>Select Secondary Image 1</h4>
                                </div>
                                <div class="card-body">
                                    <div class="input-upload text-start">
                                        <label for="image2" class="form-label">
                                            <img id="preview2" src="../assets/imgs/theme/upload.svg" alt="" width="150px">
                                        </label>
                                        <input type="file" class="form-control" id="image2" name="images" style="display: none;">
                                        <button type="button" class="btn btn-md rounded font-sm" onclick="document.getElementById('image2').click();">Upload Image</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="card mb-4">
                                <div class="card-header">
                                    <h4>Select Secondary Image 2</h4>
                                </div>
                                <div class="card-body">
                                    <div class="input-upload text-start">
                                        <label for="image3" class="form-label">
                                            <img id="preview3" src="../assets/imgs/theme/upload.svg" alt="" width="150px">
                                        </label>
                                        <input type="file" class="form-control" id="image3" name="images" style="display: none;">
                                        <button type="button" class="btn btn-md rounded font-sm" onclick="document.getElementById('image3').click();">Upload Image</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Submit button -->
                        <button class="btn btn-md rounded font-sm hover-up" type="submit">Add Products</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</section>

<!-- Image Crop Modal -->
<div class="modal fade" id="imageCropModal" tabindex="-1" aria-labelledby="imageCropModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageCropModalLabel">Crop Image</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <img id="imageToCrop" src="" alt="Crop this image" style="max-width: 100%;">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="cropImageBtn">Crop</button>
            </div>
        </div>
    </div>
</div>

<!-- Cropper.js -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.2/cropper.js"></script>
<script defer>
    let currentInputId, currentPreviewId, cropper;
    let croppedImages = {};
    let originalFileNames = {};

    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById('image1').addEventListener('change', function () { prepareImageForCropping('image1', 'preview1'); });
        document.getElementById('image2').addEventListener('change', function () { prepareImageForCropping('image2', 'preview2'); });
        document.getElementById('image3').addEventListener('change', function () { prepareImageForCropping('image3', 'preview3'); });

        document.getElementById('cropImageBtn').addEventListener('click', function () {
            performCropping();
        });

        $('#imageCropModal').on('shown.bs.modal', function () {
            let image = document.getElementById('imageToCrop');
            cropper = new Cropper(image, {
                aspectRatio: 1,
                viewMode: 1,
                dragMode: "move",
                minContainerWidth: 450,
                minContainerHeight: 500,
                minCropBoxWidth: 400,
                minCropBoxHeight: 400,
                minCanvasHeight: 500,
                minCanvasWidth: 500,
            });
        });

        $('#imageCropModal').on('hidden.bs.modal', function () {
            if (cropper) {
                cropper.destroy();
                cropper = null;
            }
        });

        const stockInput = document.querySelector('input[name="productStock"]');
        const priceInput = document.querySelector('input[name="price"]');
        const titleInput = document.querySelector('input[name="productName"]');
        const descriptionInput = document.querySelector('textarea[name="productDespt"]');

        stockInput.addEventListener('input', function () {
            if (stockInput.value < 0) {
                stockInput.setCustomValidity('Stock cannot be negative.');
                stockInput.reportValidity();
            } else {
                stockInput.setCustomValidity('');
            }
        });

        priceInput.addEventListener('input', function () {
            if (priceInput.value < 0) {
                priceInput.setCustomValidity('Price cannot be negative.');
                priceInput.reportValidity();
            } else {
                priceInput.setCustomValidity('');
            }
        });

        document.getElementById('addProductForm').addEventListener('submit', function (e) {
            if (stockInput.value < 0) {
                e.preventDefault();
                stockInput.setCustomValidity('Stock cannot be negative.');
                stockInput.reportValidity();
            } else {
                stockInput.setCustomValidity('');
            }

            if (priceInput.value < 0) {
                e.preventDefault();
                priceInput.setCustomValidity('Price cannot be negative.');
                priceInput.reportValidity();
            } else {
                priceInput.setCustomValidity('');
            }

            if (titleInput.value.trim() === "") {
                e.preventDefault();
                titleInput.setCustomValidity('Product title is required.');
                titleInput.reportValidity();
            } else {
                titleInput.setCustomValidity('');
            }

            if (descriptionInput.value.trim() === "") {
                e.preventDefault();
                descriptionInput.setCustomValidity('Product description is required.');
                descriptionInput.reportValidity();
            } else {
                descriptionInput.setCustomValidity('');
            }
        });
    });

    function prepareImageForCropping(inputId, previewId) {
        currentInputId = inputId;
        currentPreviewId = previewId;
        const input = document.getElementById(inputId);
        const file = input.files[0];
        const newDate = new Date().getTime();
        originalFileNames[inputId] = `${file.name}_${newDate}`;

        const reader = new FileReader();
        reader.onload = function (e) {
            document.getElementById('imageToCrop').src = e.target.result;
            $('#imageCropModal').modal('show');
        };
        reader.readAsDataURL(file);
    }

    function performCropping() {
        if (!cropper) {
            console.error("Cropper is not initialized.");
            return;
        }

        cropper.getCroppedCanvas().toBlob((blob) => {
            const previewId = currentPreviewId;
            const file = new File([blob], originalFileNames[currentInputId], { type: 'image/png' });

            const dataTransfer = new DataTransfer();
            dataTransfer.items.add(file);
            document.getElementById(currentInputId).files = dataTransfer.files;

            const preview = document.getElementById(currentPreviewId);
            preview.src = URL.createObjectURL(blob);

            croppedImages[currentInputId] = blob;
            $('#imageCropModal').modal('hide');
        }, 'image/png');
    }
</script>