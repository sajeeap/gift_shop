<!-- Profile form-->

<section class="user-profile-page">
    <div class="px-4 py-5 px-md-5 text-lg-start" style="background-color: hsl(0, 0%, 96%)">
        <div class="row gx-lg-5 justify-content-center">
            <div class="col-lg-3 mb-5 mb-lg-0">
                <div class="card">
                    <div class="card-body py-5 px-md-5">
                        <div class="d-flex">
                            <div class="nav flex-column nav-pills me-3" id="v-pills-tab" role="tablist"
                                aria-orientation="vertical">
                                <a href="#" class="nav-link active" id="v-pills-account-tab" data-bs-toggle="pill"
                                    data-bs-target="#v-pills-account" type="button" role="tab"
                                    aria-controls="v-pills-account" aria-selected="true">Account
                                </a>
                                <a href="#" class="nav-link" id="v-pills-password-tab" data-bs-toggle="pill"
                                    data-bs-target="#v-pills-password" type="button" role="tab"
                                    aria-controls="v-pills-password" aria-selected="false">Change Password
                                </a>
                                <a href="#" class="nav-link" id="v-pills-orders-tab" data-bs-toggle="pill"
                                    data-bs-target="#v-pills-orders" type="button" role="tab"
                                    aria-controls="v-pills-orders" aria-selected="false">Orders
                                </a>
                                
                                <a href="#" class="nav-link" id="v-pills-address-tab" data-bs-toggle="pill"
                                    data-bs-target="#v-pills-address" type="button" role="tab"
                                    aria-controls="v-pills-address" aria-selected="false">Address
                                </a>

                            </div>

                        </div>
                    </div>

                </div>
            </div>
            <div class="col-lg-9 mb-5 mb-lg-0">
                <div class="card">
                    <div class="card-body py-5 px-md-5">
                        <div class="tab-content" id="v-pills-tabContent">

                            <!-- Account -->
                            <div class="tab-pane fade show active" id="v-pills-account" role="tabpanel"
                                aria-labelledby="v-pills-home-tab" tabindex="0">
                                <form id="update_profile" action="/user/profile" method="post">
                                    <div class="row">
                                        <div class="col-md-12 mb-4">
                                            <div class="form-outline">
                                                <h3 class="text-capitalize" id="username">
                                                    <%= user.firstName %>
                                                        <%= user.lastName %>
                                                </h3>
                                                <p>Update Profile</p>
                                            </div>
                                            <hr />
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6 mb-4">
                                            <div class="form-outline">
                                                <label for="firstName" class="form-label text-left">First Name</label>
                                                <input name="firstName" type="text" class="form-control" id="firstName"
                                                    placeholder="First Name" value="<%= user.firstName %>">
                                                <small class="text-danger"></small>
                                            </div>
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <div class="form-outline">
                                                <label for="lastName" class="form-label text-left">Last Name</label>
                                                <input name="lastName" type="text" class="form-control" id="lastName"
                                                    placeholder="Last Name" value="<%= user.lastName %>">
                                                <small class="text-danger"></small>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-outline mb-4">
                                        <label for="email" class="form-label text-left">Email</label>
                                        <input name="email" type="email" class="form-control" id="email"
                                            value="<%= user.email %>" placeholder="example@gmail.com" disabled>
                                        <small class="text-danger"></small>
                                    </div>

                                    <div class="flex-c-m">
                                        <button type="submit"
                                            class="flex-c-m stext-101 cl0 size-101 bg1 bor1 hov-btn1 p-lr-15 trans-04">
                                            Update
                                        </button>
                                    </div>
                                </form>
                            </div>

                            <!-- change password -->
                            <div class="tab-pane fade" id="v-pills-password" role="tabpanel"
                                aria-labelledby="v-pills-profile-tab" tabindex="0">
                                <div class="row">
                                    <div class="col-md-12 mb-4">
                                        <div class="form-outline">
                                            <h3 class="text-capitalize">

                                                Change Password
                                            </h3>
                                        </div>
                                        <hr />
                                    </div>
                                </div>
                                <!-- change password -->
                                <form id="changePasswordForm" action="/user/change-password" method="POST">
                                    <div class="form-outline mb-4">
                                        <label for="currentPassword" class="form-label text-left">Current
                                            Password</label>
                                        <input name="currentPassword" type="password" class="form-control"
                                            id="currentPassword" required>
                                    </div>
                                    <div class="form-outline mb-4">
                                        <label for="newPassword" class="form-label text-left">New Password</label>
                                        <input name="newPassword" type="password" class="form-control" id="newPassword"
                                            required>
                                    </div>
                                    <div class="form-outline mb-4">
                                        <label for="confirmPassword" class="form-label text-left">Confirm
                                            Password</label>
                                        <input name="confirmPassword" type="password" class="form-control"
                                            id="confirmPassword" required>
                                    </div>
                                    <div class="flex-c-m">
                                        <button type="submit"
                                            class="flex-c-m stext-101 cl0 size-101 bg1 bor1 hov-btn1 p-lr-15 trans-04">Confirm</button>
                                    </div>
                                </form>

                            </div>

                            <!-- Orders -->
                            <div class="tab-pane fade" id="v-pills-orders" role="tabpanel"
                                aria-labelledby="v-pills-profile-tab" tabindex="0">
                                <div class="row">
                                    <div class="col-md-12 mb-4">
                                        <div class="form-outline">
                                            <h3 class="text-capitalize">
                                                My Orders
                                            </h3>
                                        </div>
                                        <hr />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-12 col-xl-12 m-lr-auto m-b-50">
                                        <div class="wrap-table-shopping-cart">
                                            <table class="table-shopping-cart">
                                                <tr class="table_head">
                                                    <th class="column-1">Order ID</th>
                                                    <th class="column-2">Date</th>
                                                    <th class="column-3">Status</th>
                                                    <th class="column-4">Total</th>
                                                    <th class="column-5">Action</th>
                                                </tr>
                                                
                                                <% orders.forEach(order => { %>
                                                    
                                                    <tr class="table_row">
                                                        <td class="column-1">
                                                            <%= order._id %>
                                                        </td>
                                                        <td class="column-2"><%= order.createdAt.toDateString() %></td>
                                                        <td class="column-3">
                                                            <%= order.status %>
                                                        </td>
                                                        <td class="column-4">
                                                           $<%= order.items.reduce((total,item)=> total + item.itemTotal,0) %>
                                                        </td>
                                                        <td class="column-5">
                                                            <button type="button" class="btn btn-primary btn-sm"
                                                                data-toggle="modal" data-target="#orderModal"
                                                                onclick="populateOrderModal('<%= order._id %>')">
                                                                View
                                                            </button>
                                                        </td>
    
                                                    </tr>

                                                 
                                                <% }) %>

                                                
                                            </table>
                                        </div>
                                    </div>
                                </div>

                            </div>


</div>

                            

                            <!-- Address -->
                          
                            <div class="tab-pane fade" id="v-pills-address" role="tabpanel"
                                aria-labelledby="v-pills-profile-tab" tabindex="0">
                                <div class="row">
                                    <div class="col-md-12 mb-4">
                                        <div class="address-title">
                                            <h3 class="text-capitalize">Address</h3>
                                            <button class="btn bg1 cl0 bor1" data-toggle="modal"
                                                data-target="#exampleModal">+ New Address</button>
                                        </div>
                                        <hr />
                                    </div>
                                </div>

                                <div class="row">
                                    <% if (addresses && addresses.length> 0) { %>
                                        <% addresses.forEach(function(address) { %>
                                            <div class="col-lg-6 mb-3" id="address-<%= address._id %>">
                                                <div class="card mb-3 mb-lg-0 mb-3">
                                                    <div class="card-body">
                                                        <address>
                                                            <span class="name">
                                                                <%= address.name %>
                                                            </span><br>
                                                            <span class="address_type">
                                                                <%= address.address_type %>
                                                            </span><br>
                                                            <span class="zip_code">
                                                                <%= address.zip_code %>
                                                            </span><br>
                                                            <span class="locality">
                                                                <%= address.locality %>
                                                            </span><br>
                                                            <span class="house_name">
                                                                <%= address.house_name %>
                                                            </span><br>
                                                            <span class="area_street">
                                                                <%= address.area_street %>
                                                            </span><br>
                                                            <span class="town">
                                                                <%= address.town %>
                                                            </span><br>
                                                            <span class="state">
                                                                <%= address.state %>
                                                            </span><br>
                                                            <span class="landmark">
                                                                <%= address.landmark %>
                                                            </span>
                                                        </address>
                                                        <div class="mt-2">
                                                            <button class="btn btn-primary"
                                                                onclick="openEditModal('<%= address._id %>')">Edit</button>
                                                            <button class="btn btn-danger"
                                                                onclick="deleteAddress('<%= address._id %>')">Delete</button>
                                                            <button class="btn btn-success"
                                                                onclick="setDefaultAddress('<%= address._id %>')">
                                                                <% if (address.default) { %>
                                                                    Default Address
                                                                <% } else { %>
                                                                        Set as Default
                                                                <% } %>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <% }); %>
                                                <% } else { %>
                                                    <p>No addresses found.</p>
                                                    <% } %>
                                </div>
                            </div>


                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
    </div>
</section>
<!-- add/edit address Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add/Edit Address</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="address-form" action="/user/add-address" method="POST">
                <div class="modal-body">

                    <input type="hidden" name="addressId" id="addressId">
                    <input type="text" name="name" id="name" placeholder="Name" class="form-control mb-2" required>
                    <input type="text" name="address_type" id="address_type" placeholder="Address Type"
                        class="form-control mb-2" required>
                    <input type="text" name="zip_code" id="zip_code" placeholder="Zip Code" class="form-control mb-2"
                        required>
                    <input type="text" name="locality" id="locality" placeholder="Locality" class="form-control mb-2"
                        required>
                    <input type="text" name="house_name" id="house_name" placeholder="House Name"
                        class="form-control mb-2" required>
                    <input type="text" name="area_street" id="area_street" placeholder="Area/Street"
                        class="form-control mb-2" required>
                    <input type="text" name="town" id="town" placeholder="Town" class="form-control mb-2" required>
                    <input type="text" name="state" id="state" placeholder="State" class="form-control mb-2" required>
                    <input type="text" name="landmark" id="landmark" placeholder="Landmark" class="form-control mb-2"
                        required>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Order Modal -->

<div class="modal fade" id="orderModal" tabindex="-1" role="dialog" aria-labelledby="orderModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderModalLabel">Order Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h5>Items:</h5>
                <ul id="modalOrderItems"></ul>


                <p class="mt-5"><strong>Order ID:</strong> <span id="modalOrderId"></span></p>
                <p><strong>Date:</strong> <span id="modalOrderDate"></span></p>
                <p><strong>Status:</strong> <span id="modalOrderStatus"></span></p>
                
                
                <p><strong>Total:</strong> $<span id="modalOrderTotal"></span></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>



<script>
    function openAddModal() {
        document.getElementById('address-form').reset();
        document.getElementById('addressId').value = ''; // Clear the address ID for adding a new address
        $('#exampleModal').modal('show');
    }

    function openEditModal(addressId) {
        const address = document.getElementById('address-' + addressId);
        const name = address.querySelector('.name').innerText;
        const addressType = address.querySelector('.address_type').innerText;
        const zipCode = address.querySelector('.zip_code').innerText;
        const locality = address.querySelector('.locality').innerText;
        const houseName = address.querySelector('.house_name').innerText;
        const areaStreet = address.querySelector('.area_street').innerText;
        const town = address.querySelector('.town').innerText;
        const state = address.querySelector('.state').innerText;
        const landmark = address.querySelector('.landmark').innerText;

        document.getElementById('addressId').value = addressId;
        document.getElementById('name').value = name;
        document.getElementById('address_type').value = addressType;
        document.getElementById('zip_code').value = zipCode;
        document.getElementById('locality').value = locality;
        document.getElementById('house_name').value = houseName;
        document.getElementById('area_street').value = areaStreet;
        document.getElementById('town').value = town;
        document.getElementById('state').value = state;
        document.getElementById('landmark').value = landmark;

        $('#exampleModal').modal('show');
    }

    document.getElementById('address-form').addEventListener('submit', function (e) {
        e.preventDefault(); // Prevent form submission

        const name = document.getElementById('name').value;
        const addressType = document.getElementById('address_type').value;
        const zipCode = document.getElementById('zip_code').value;
        const locality = document.getElementById('locality').value;
        const houseName = document.getElementById('house_name').value;
        const areaStreet = document.getElementById('area_street').value;
        const town = document.getElementById('town').value;
        const state = document.getElementById('state').value;
        const landmark = document.getElementById('landmark').value;

        const addressId = document.getElementById('addressId').value;

        let url = '/user/add-address';
        let method = 'POST';

        if (addressId) {
            url = '/user/edit-address';
            method = 'POST';
        }

        // If all validations pass, submit the form using AJAX
        fetch(url, {
            method: method,
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ addressId, name, addressType, zipCode, locality, houseName, areaStreet, town, state, landmark }),
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: data.message,
                    }).then(() => {
                        // Optionally redirect or perform other actions after success
                        window.location.href = '/user/profile'; // Redirect to profile page
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message,
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Server Error',
                    text: 'An error occurred while processing the address',
                });
            });
    });

    function editAddress(addressId) {
        openEditModal(addressId);
    }

    function deleteAddress(addressId) {

        Swal.fire({
            title: "Are you sure?",
            text: "Do you really want to delete this address??",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, Delete it!",
            cancelButtonText: "No, Cancel!"
        }).then((result) => {
            if (result.isConfirmed) {
                fetch("/user/delete-address", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",

                    },
                    body: JSON.stringify({ addressId })
                })

                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                icon: "Success",
                                title: "Deleted",
                                text: "Your address has been deleted",
                            }).then(() => {
                                location.reload();
                            })
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Server Error",
                                text: "An error occured while deleting the address"
                            })
                        }
                    })
            }
        })
    }
</script>

<script>
    document.getElementById('changePasswordForm').addEventListener('submit', function (e) {
        e.preventDefault(); // Prevent form submission

        const currentPassword = document.getElementById('currentPassword').value;
        const newPassword = document.getElementById('newPassword').value;
        const confirmPassword = document.getElementById('confirmPassword').value;

        if (newPassword !== confirmPassword) {
            Swal.fire({
                icon: 'error',
                title: 'Validation Error',
                text: 'New passwords do not match',
            });
            return; // Exit function to prevent further execution
        }

        // Optional client-side validation for password complexity
        if (newPassword.length < 8 || !/[A-Z]/.test(newPassword) || !/[0-9]/.test(newPassword)) {
            Swal.fire({
                icon: 'error',
                title: 'Validation Error',
                text: 'New password must be at least 8 characters long and contain at least one uppercase letter and one digit',
            });
            return; // Exit function to prevent further execution
        }

        // If all validations pass, submit the form using AJAX
        fetch('/user/change-password', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ currentPassword, newPassword, confirmPassword }),
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: data.message,
                    }).then(() => {
                        // Optionally redirect or perform other actions after success
                        window.location.href = '/user/profile'; // Redirect to profile page
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message,
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Server Error',
                    text: 'An error occurred while changing the password',
                });
            });
    });
</script>

<script>
    document.getElementById('update_profile').addEventListener('submit', function (e) {
        e.preventDefault();

        const firstName = document.getElementById('firstName').value.trim();
        const lastName = document.getElementById('lastName').value.trim();

        // Clear previous validation messages
        document.querySelectorAll('.form-outline small').forEach(el => el.textContent = '');

        let isValid = true;

        // Client-side validation
        if (!firstName) {
            isValid = false;
            document.querySelector('#firstName + small').textContent = 'First name is required.';
            Swal.fire({
                icon: 'error',
                title: 'Validation Error',
                text: 'First name is required.'
            });
        }

        if (!lastName) {
            isValid = false;
            document.querySelector('#lastName + small').textContent = 'Last name is required.';
            Swal.fire({
                icon: 'error',
                title: 'Validation Error',
                text: 'Last name is required.'
            });
        }

        if (isValid) {
            // Confirm with the user using SweetAlert2
            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to update your profile?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, update it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Send AJAX request
                    fetch('/user/profile', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ firstName, lastName }),
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.message) {
                                // Display success message
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: data.message
                                });

                                // Update the username in the DOM
                                const usernameElement = document.getElementById('username');
                                usernameElement.textContent = `${firstName} ${lastName}`;
                            } else {
                                // Handle error message
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'An error occurred while updating the profile.'
                                });
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'An error occurred while updating the profile.'
                            });
                        });
                }
            });
        }
    });
</script>

<script>
    function setDefaultAddress(addressId) {
        fetch('/user/set-default-address', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ addressId })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    title: 'Success',
                    text: data.message,
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then(() => {
                    location.reload(); // Reload the page to reflect the changes
                });
            } else {
                Swal.fire({
                    title: 'Error',
                    text: data.message,
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                title: 'Error',
                text: 'An error occurred while processing your request.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        });
    }
</script>



<script>
    function populateOrderModal(orderId) {
        fetch(`/user/order-details/${orderId}`)
            .then(response => response.json())
            .then(order => {
                if (order) {
                    
                    document.getElementById('modalOrderId').textContent = order._id;
                    document.getElementById('modalOrderDate').textContent = new Date(order.createdAt).toDateString();
                    document.getElementById('modalOrderStatus').textContent = order.status;
                    
                    const itemsList = document.getElementById('modalOrderItems');
                    itemsList.innerHTML = '';
                    order.items.forEach(item => {
                        const li = document.createElement('li');
                        li.textContent = `${item.product_id.product_name} - $${item.price}`;
                        itemsList.appendChild(li);
                    });

                    document.getElementById('modalOrderTotal').textContent = order.items.reduce((total, item) => total + item.itemTotal, 0);

                    $('#orderModal').modal('show');
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to fetch order details'
                    });
                }
            })
            .catch(error => {
                console.error('Error fetching order details:', error);
                
            });
    }
</script>